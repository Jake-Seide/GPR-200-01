#version 300 es

//Only for GLSL ES
#ifdef GL_ES
precision highp float;
#endif //GLES

//declare output
layout (location = 0) out vec4 rtFragColor;

//Uniforms
uniform sampler2D uTex;

//Varying(ps)
in vec4 vPosition;
in vec4 vNormal;
in vec2 vTexcoord;

// Referening CookBook By: David Wolff
vec4 blurPass()
{
    float temp = .05;
    // Blur weight
    float weight[10] = float[](temp,temp,temp,temp,temp,temp,temp,temp,temp,temp);
    
    // Blur pixel Offset
    float pixelOffset[10] = float[](0.0,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0);
 
    // Resiprical of the screen height    
    float dy = 1.0 / vTexcoord.y; //float(screen_height);
    
    // Setting Sum Vector
    vec4 sum = texture(uTex, vTexcoord) * weight[0];
    
    // Blur Computation
    for(int i = 1; i < 10; ++i)
    {
    	sum += texture(uTex, vTexcoord + 
                      vec2(0.0, pixelOffset[i]) * dy) * weight[i];
        sum += texture(uTex, vTexcoord - 
                      vec2(0.0, pixelOffset[i]) * dy) * weight[i];
    }
    
    //normilize kernal(dont use normilize)
	return sum;
}

// mainImage: process the current pixel (exactly one call per fragment)
void main()
{
    
    // TESTING
    rtFragColor = blurPass();
}