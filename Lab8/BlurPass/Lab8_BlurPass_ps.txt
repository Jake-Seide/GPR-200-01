#version 300 es

//Only for GLSL ES
#ifdef GL_ES
precision highp float;
#endif //GLES

//declare output
layout (location = 0) out vec4 rtFragColor;

//Uniforms
uniform sampler2D uTex;

//Varying(ps)
in vec4 vPosition;
in vec2 vTexcoord;

// Reference Link: http://rastergrid.com/blog/2010/09/efficient-gaussian-blur-with-linear-sampling/
vec4 BlurrPass()
{
    float offset[5] = float[](0.0, 1.0, 2.0, 3.0, 4.0);
    float weight[5] = float[](0.29, 0.25, 0.2, 0.15, 0.1);

        rtFragColor = texture(uTex, vTexcoord) * weight[0];
    for (int i=1; i<5; i++) {
        rtFragColor += texture(uTex, vTexcoord + vec2(0.0, offset[i])) * weight[i];

        rtFragColor += texture(uTex,  vTexcoord - vec2(0.0, offset[i])) * weight[i];
    }

    return rtFragColor;
}

// mainImage: process the current pixel (exactly one call per fragment)
void main()
{
    // Blurr Pass
    rtFragColor = BlurrPass();
}