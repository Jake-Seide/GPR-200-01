// Assigment by: Jake Seide and Joseph Tecce
// Using Shadertoy Copywrite User Agreement

//  -> Buffer C (scene)

//------------------------------------------------------------
// SHADERTOY MAIN

//LINK: https://www.shadertoy.com/view/XtlSD7 -> for Screen Curve
//Link3: https://www.shadertoy.com/view/MlBcRt -> for Border Optimization
vec2 ScreenCurve(in vec2 uv)
{
    //Offsets a given UV to look as id the screen is curving
    uv = uv * 2.0 - 1.0; //makes sure uv conforms to the screen
    vec2 offset = uv.yx / vec2(vertCurve, horizonCurve); // calculates curve offset
    uv = uv + uv * offset * offset; //curves screen
    uv = uv * 0.5 + 0.5; //makes sure uv conforms to the screen 
    return uv;  
}


void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    // Normalized pixel coordinates (from 0 to 1)
    vec2 uv = fragCoord/iResolution.xy;
 
    //CRT ScreenCurve
    vec2 crtUV = ScreenCurve(uv);
     
    //Creates Border Attenuation
    vec2 interpValue = 2.0 * crtUV - 1.0;
   	vec2 fc = 1.0 - smoothstep(vec2(0.9), vec2(1.0), interpValue * interpValue);
    float fact = fc.x * fc.y;
    
    //Final Output
    fragColor= texture(iChannel0, crtUV) * vec4(fact);
}