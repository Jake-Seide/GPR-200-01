// Assigment by: Jake Seide and Joseph Tecce
// Using Shadertoy Copywrite User Agreement

//  -> COMMON TAB (shared with all other tabs)

//------------------------------------------------------------

// Sound Bar Defines
// Bands and Segs are the collums and rows of the audio visulizer
#define bands 20.0
#define segs 20.0


// Diffusion Defines and Functions
// Light Intesnisty
#define LightIntensity 1.0

// This is a "uniform" that was just manually made to help with the position of the light
#define falloff vec3(0.1, 3.0, 10.0)

// Length Function for Vec3
float LengthVec3(vec3 a)
{
    return (a.x * a.x) +
           (a.y * a.y) +
           (a.z * a.z);
}


// Screen Curve Defines
#define vertCurve 4.0
#define horizonCurve 3.0


//------------------------------------------------------------
/*
// GLSL FRAGMENT SHADER STRUCTURE WITH COMMON TAB
//  -> This is (likely) how Shadertoy compiles buffer tabs:

// latest version or whichever is used
#version 300 es

// PROGRAM UNIFORMS (see 'Shader Inputs' dropdown)

// **CONTENTS OF COMMON TAB PASTED HERE**

// **CONTENTS OF BUFFER TAB PASTED HERE**

// FRAGMENT SHADER INPUTS (more on this later)

// FRAGMENT SHADER OUTPUTS (framebuffer render target(s))
//out vec4 rtFragColor; // no specific target
layout (location = 0) out vec4 rtFragColor; // default

void main()
{
    // Call 'mainImage' in actual shader main, which is 
	// 	our prototyping interface for ease of use.
	//		rtFragColor:  shader output passed by reference,
	//			full vec4 read in 'mainImage' as 'fragColor'
	//		gl_FragCoord: GLSL's built-in pixel coordinate,
	//			vec2 part read in 'mainImage' as 'fragCoord'
    mainImage(rtFragColor, gl_FragCoord.xy);
}
*/